<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xyh.backendcenter.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.xyh.backendcenter.entity.User">
            <id property="id" column="id"/>
            <result property="username" column="username"/>
            <result property="password" column="password"/>
            <result property="nickname" column="nickname"/>
            <result property="photo" column="photo"/>
            <result property="name" column="name"/>
            <result property="sex" column="sex"/>
            <result property="tel" column="tel"/>
            <result property="email" column="email"/>
            <result property="role" column="role"/>
            <result property="root" column="root"/>
            <result property="deptId" column="dept_id"/>
            <result property="status" column="status"/>
            <result property="createTime" column="create_time"/>
            <result property="updateTime" column="update_time"/>
            <result property="isDeleted" column="is_deleted"/>
    </resultMap>

    <update id="update" parameterType="HashMap">
        UPDATE tb_user
        SET
        <if test="username!=null">
            username = #{username},
        </if>
        <if test="password!=null">
            password = #{password},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        role = #{role},
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        <if test="status!=null">
            status = #{status},
        </if>
        id=id
        WHERE id=#{id}
    </update>

    <select id="searchUserPermission" parameterType="int" resultType="String">
        SELECT DISTINCT p.permission_name
        FROM tb_user u
                 JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
                 JOIN tb_permission p ON JSON_CONTAINS(r.permissions, CAST(p.id AS CHAR))
        WHERE u.id=#{userId} AND u.status=1;
    </select>

    <select id="getUserList" parameterType="HashMap" resultType="HashMap">
        SELECT
        DISTINCT u.id,
        u.username,
        u.nickname,
        u.photo,
        u.name,
        u.sex,
        u.tel,
--         u.dept_id as deptId,
--         u.role,
        u.email,
        d.dept_name AS deptId,
        u.root,
        u.status,
        u.create_time AS createTime,
        u.update_time AS updateTime,
        u.is_deleted as isDeleted,
        ( SELECT GROUP_CONCAT( role_name separator "ï¼Œ" ) FROM tb_role WHERE JSON_CONTAINS ( u.role, CONVERT ( id, CHAR ) ) ) AS role
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        LEFT JOIN tb_dept d ON u.dept_id = d.id
        WHERE 1=1
        <if test="nickname!=null and nickname!=''">
            AND u.nickname LIKE CONCAT('%', #{nickname}, '%')
        </if>
        <if test="sex!=null and sex !=''">
            AND u.sex=#{sex}
        </if>
        <if test="role!=null and role !=''">
            AND r.id=#{role}
        </if>
        <if test="deptId!=null and deptId!=''">
            AND d.id=#{deptId}
        </if>
        <if test="status!=null and status !=''">
            AND u.status=#{status}
        </if>
        AND is_deleted=0
        LIMIT #{start}, #{pageSize}
    </select>
    <select id="searchUserCount" parameterType="HashMap" resultType="long">
        SELECT
        COUNT(DISTINCT u.id)
        FROM tb_user u
        JOIN tb_role r ON JSON_CONTAINS ( u.role, CONVERT ( r.id, CHAR ) )
        WHERE 1=1
        <if test="nickname!=null and nickname!=''">
            AND u.nickname LIKE CONCAT('%', #{nickname}, '%')
        </if>
        <if test="sex!=null and sex !=''">
            AND u.sex=#{sex}
        </if>
        <if test="role!=null and role !=''">
            AND r.id=#{role}
        </if>
        <if test="deptId!=null and deptId!=''">
            AND u.dept_id=#{deptId}
        </if>
        <if test="status!=null and status !=''">
            AND u.status=#{status}
        </if>
        AND is_deleted=0
    </select>


    <insert id="insert" parameterType="com.xyh.backendcenter.entity.User">
        INSERT INTO tb_user
        SET
        <if test="username!=null">
            username = #{username},
        </if>
        <if test="password!=null">
            password = #{password},
        </if>
        <if test="nickname!=null">
            nickname = #{nickname},
        </if>
        <if test="photo!=null">
            photo = #{photo},
        </if>
        <if test="name!=null">
            name = #{name},
        </if>
        <if test="sex!=null">
            sex = #{sex},
        </if>
        <if test="tel!=null">
            tel = #{tel},
        </if>
        <if test="email!=null">
            email=#{email},
        </if>
        role = #{role},
        <if test="root!=null">
            root = #{root},
        </if>
        <if test="deptId!=null">
            dept_id = #{deptId},
        </if>
        status = #{status},
        create_time = #{createTime},
        update_time = #{updateTime}
    </insert>


</mapper>
